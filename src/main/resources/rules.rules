@prefix : <http://www.semanticweb.org/andrej/ontologies/2024/9/opentelemetry-ontology#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix xml: <http://www.w3.org/XML/1998/namespace> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .

## The OWL reasoner in Apache Jena Fuseki lacks support for some of the rules OWL 2 offers
## Those rules are therefore re-implemented here

# Infer parent spans based on spanId and parentSpanId
# OWL reasoner will then infer the parentSpan property (inverse)
[parentSpanRule:
    (?s1 rdf:type :Span)
    (?s2 rdf:type :Span)
    (?s1 :traceId ?t)
    (?s2 :traceId ?t)
    (?s2 :spanId ?p)
    (?s1 :parentSpanId ?p)
    ->
    (?s1 :parentSpan ?s2)
]

# Infer which spans are part of which trace, based on traceId
# Reverse property is once again inferred by OWL reasoner
[traceContainsSpan:
    (?s rdf:type :Span)
    (?t rdf:type :Trace)
    (?s :traceId ?id)
    (?t :traceId ?id)
    ->
    (?t :containsSpan ?s)
]

# Infer connection between a Link and the span it points to
[spanLinkRule:
    (?span rdf:type :Span)
    (?link rdf:type :Link)
    (?link :traceId ?tid)
    (?link :spanId ?sid)
    (?span :traceId ?tid)
    (?span :spanId ?sid)
    ->
    (?link :linkedSpan ?span)
]

# Infer spans linked to one another via the Link class
# The inverse is then inferred via the OWL reasoner
[spanLinkingRule:
    (?mainSpan rdf:type :Span)
    (?span rdf:type :Span)
    (?link rdf:type :Link)
    (?mainSpan :link ?link)
    (?link :traceId ?tid)
    (?link :spanId ?sid)
    (?span :traceId ?tid)
    (?span :spanId ?sid)
    ->
    (?mainSpan :linked ?span)
]

